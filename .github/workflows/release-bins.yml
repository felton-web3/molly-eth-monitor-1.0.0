---
name: Release binaries
on:
  workflow_dispatch:
    inputs:
      tag:
        type: string
        description: The tag to use for releasing binaries.
        required: true
  workflow_call:
    inputs:
      tag:
        type: string
        description: The tag to use for releasing binaries.
        required: true
jobs:
  build:
    name: Build binaries
    environment: release
    env:
      TAG: ${{ inputs.tag || github.event.inputs.tag }}
    outputs:
      release_tag: ${{ env.TAG }}
    strategy:
      matrix:
        include:
          - arch: x86_64-unknown-linux-gnu
            platform: ubuntu-22.04
          - arch: aarch64-unknown-linux-gnu
            platform: ubuntu-22.04-arm
          - arch: x86_64-apple-darwin
            platform: macos-latest
          - arch: aarch64-apple-darwin
            platform: macos-latest
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Get github app token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5  # v2.0.2
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.TAG }}
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Install Rust
        uses: dtolnay/rust-toolchain@fcf085fcb4b4b8f63f96906cd713eb52181b5ea4  # stable
        with:
          toolchain: stable
          target: ${{ matrix.arch }}
      - name: Build monitor for ${{ matrix.arch }}
        run: |
          cargo build --bin openzeppelin-monitor --release --target ${{ matrix.arch }}
      - name: Pack monitor
        run: |
          tar -C ./target/${{ matrix.arch }}/release -czf \
            openzeppelin-monitor-${{ env.TAG }}-${{ matrix.arch }}.tar.gz \
            openzeppelin-monitor
      - name: Upload artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02  # v4.6.2
        with:
          name: openzeppelin-monitor-${{ matrix.arch }}
          path: |
            openzeppelin-monitor-${{ env.TAG }}-${{ matrix.arch }}.tar.gz
            ./target/${{ matrix.arch }}/release/openzeppelin-monitor
          retention-days: 7
  upload-binaries:
    name: Upload binaries
    permissions:
      contents: write
      pull-requests: write
      attestations: write
      packages: write
      id-token: write
    needs: build
    runs-on: ubuntu-latest
    env:
      TAG: ${{ needs.build.outputs.release_tag }}
    steps:
      - name: Get github app token
        uses: actions/create-github-app-token@3ff1caaa28b64c9cc276ce0a02e2ff584f3900c5  # v2.0.2
        id: gh-app-token
        with:
          app-id: ${{ vars.GH_APP_ID }}
          private-key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Checkout sources
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          ref: ${{ env.TAG }}
          token: ${{ steps.gh-app-token.outputs.token }}
      - name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e  # v4.2.1
        with:
          pattern: openzeppelin-monitor-*
          path: artifacts
      - name: Binaries attestation
        uses: actions/attest-build-provenance@d3b713ade6128010830a9be91a036ed11e065550  # main
        with:
          subject-path: artifacts/**/openzeppelin-monitor
          github-token: ${{ steps.gh-app-token.outputs.token }}
      - name: Update release please artifacts
        uses: softprops/action-gh-release@f82d31e53e61a962573dd0c5fcd6b446ca78871f  # main
        with:
          tag_name: ${{ env.TAG }}
          files: artifacts/**/openzeppelin-monitor*.tar.gz
          token: ${{ steps.gh-app-token.outputs.token }}
